apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "panope.observer.fullname" . }}
  labels:
    {{- include "panope.observer.labels" . | nindent 4 }}
  {{- with .Values.observer.daemonset.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.observer.daemonset.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "panope.observer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "panope.observer.selectorLabels" . | nindent 8 }}
      {{- with .Values.observer.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.observer.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: Exists
      {{- with .Values.observer.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "panope.observer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.observer.podSecurityContext | nindent 8 }}
      containers:
      - image: "{{ .Values.observer.image.repository }}:{{ .Values.observer.image.tag | default .Chart.AppVersion }}"
        command:
        - bin/observer
        imagePullPolicy: {{ .Values.observer.image.pullPolicy }}
        name: observer
        livenessProbe:
          {{- toYaml .Values.observer.livenessProbe | trim | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.observer.readinessProbe | trim | nindent 12 }}
        resources:
          {{- toYaml .Values.observer.resources | nindent 12 }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
          - name: http
            containerPort: {{ required "Invalid value. Values.observer.configMap.healthCheckPort is required!" .Values.observer.configMap.healthCheckPort }}
            protocol: TCP
          - name: metrics
            containerPort: {{ required "Invalid value. Values.observer.configMap.metricsPort is required!" .Values.agent.configMap.metricsPort }}
            protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ include "panope.observer.fullname" . }}-env
