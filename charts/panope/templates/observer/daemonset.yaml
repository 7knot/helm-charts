apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "panope.observer.fullname" . }}
  labels:
    {{- include "panope.observer.labels" . | nindent 4 }}
  {{- with .Values.observer.daemonset.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.observer.daemonset.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "panope.observer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "panope.observer.selectorLabels" . | nindent 8 }}
      {{- with .Values.observer.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.observer.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      volumes:
      - secret:
          secretName: {{ include "panope.observer.fullname" . }}
        name: {{ include "panope.observer.fullname" . }}-creds
      # necessary to hit the node's metadata server when using Workload Identity
      hostNetwork: true
      terminationGracePeriodSeconds: 30 # for graceful shutdown
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: Exists
      {{- with .Values.observer.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "panope.observer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.observer.podSecurityContext | nindent 8 }}
      {{- if .Values.observer.priorityClassName }}
      priorityClassName: {{ .Values.observer.priorityClassName }}
      {{- end }}
      containers:
      - image: "{{ .Values.observer.image.repository }}:{{ .Values.observer.image.tag | default .Chart.AppVersion }}"
        command:
        - bin/observer
        imagePullPolicy: {{ .Values.observer.image.pullPolicy }}
        name: observer
        livenessProbe:
          {{- toYaml .Values.observer.livenessProbe | trim | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.observer.readinessProbe | trim | nindent 12 }}
        resources:
          {{- toYaml .Values.observer.resources | nindent 12 }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
          - name: http
            containerPort: {{ .Values.observer.configMap.healthCheckPort | default 4444 }}
            protocol: TCP
          - name: metrics
            containerPort: {{ .Values.observer.configMap.metricsPort | default 2112 }}
            protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ include "panope.observer.fullname" . }}-env
        volumeMounts:
        - mountPath: /observer/nats.creds
          name: {{ include "panope.observer.fullname" . }}-creds
          subPath: nats.creds
        # necessary to get the node's preempted status before handle the SIGTERM signal
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 5"]
      {{- with .Values.observer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
