# Default values for panope.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

agent:
  replicaCount: 1

  image:
    repository: gcr.io/panope/agent
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag:

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  deployment:
    # labels to add to the deployment
    labels: {}
    # Annotations to add to the deployment
    annotations: {}

  livenessProbe:
    failureThreshold: 5
    httpGet:
      path: /health
      port: 4444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  readinessProbe:
    failureThreshold: 3
    httpGet:
      path: /health
      port: 4444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  podAnnotations: {}

  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  secret:
    # labels to add to the secret
    labels: {}
    # annotations to add to the secret
    annotations: {}

    nats:
      credentials:
      # credentials: |
      #   -----BEGIN NATS USER JWT-----
      #   ------END NATS USER JWT------

      #   ************************* IMPORTANT *************************
      #   NKEY Seed printed below can be used to sign and prove identity.
      #   NKEYs are sensitive and should be treated as secrets.

      #   -----BEGIN USER NKEY SEED-----
      #   ------END USER NKEY SEED------

      #   *************************************************************

    # if set to true the values are already base64 encoded when provided, otherwise the template performs the base64 encoding
    valuesAreBase64Encoded: false
    # sets a json keyfile for a gcp service account
    googleServiceAccountKeyfileJson:

  configMap:
    # labels to add to the config map
    labels: {}
    # annotations to add to the config map
    annotations: {}

    natsUri: "wss://nats.panope.net:443"
    agentSubject:
    controllerSubject:
    healthCheckPort: "4444"
    metricsPort: "2112"

  serviceAccount:
    name: ""
    # labels to add to the service account
    labels: {}
    # Annotations to add to the service account
    annotations: {}

  clusterRole:
    # labels to add to the cluster role
    labels: {}
    # Annotations to add to the cluster role
    annotations: {}

  clusterRoleBinding:
    # labels to add to the cluster role binding
    labels: {}
    # Annotations to add to the cluster role binding
    annotations: {}

  pdb:
    # labels to add to the pdb
    labels: {}
    # annotations to add to the pdb
    annotations: {}

    # configure PodDisruptionBudget for the agent pods
    enabled: false
    # minAvailable: 1
    # maxUnavailable: 1

  serviceMonitor:
    # labels to add to the servicemonitor
    labels: {}
    # annotations to add to the servicemonitor
    annotations: {}
    # configure ServiceMonitor for Prometheus
    enabled: false

  service:
    # labels to add to the service
    labels: {}
    # Annotations to add to the service
    annotations: {}

observer:
  image:
    repository: gcr.io/panope/observer
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag:

  podAnnotations: {}

  podLabels: {}

  podSecurityContext: {}

  imagePullSecrets: []

  daemonset:
    # labels to add to the deployment
    labels: {}
    # Annotations to add to the deployment
    annotations: {}

  configMap:
    # labels to add to the config map
    labels: {}
    # annotations to add to the config map
    annotations: {}

    healthCheckPort: "4444"
    metricsPort: "2112"

  livenessProbe:
    failureThreshold: 5
    httpGet:
      path: /health
      port: 4444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  readinessProbe:
    failureThreshold: 3
    httpGet:
      path: /health
      port: 4444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  serviceAccount:
    name: ""
    # labels to add to the service account
    labels: {}
    # Annotations to add to the service account
    annotations: {}

  clusterRole:
    # labels to add to the cluster role
    labels: {}
    # Annotations to add to the cluster role
    annotations: {}

  clusterRoleBinding:
    # labels to add to the cluster role binding
    labels: {}
    # Annotations to add to the cluster role binding
    annotations: {}

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  serviceMonitor:
    # labels to add to the servicemonitor
    labels: {}
    # annotations to add to the servicemonitor
    annotations: {}
    # configure ServiceMonitor for Prometheus
    enabled: false

  service:
    # labels to add to the service
    labels: {}
    # Annotations to add to the service
    annotations: {}
