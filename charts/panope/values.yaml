# Default values for panope.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Replaces the name of the chart in the Chart.yaml file
nameOverride: ""
# -- Completely replaces the generated release name.
fullnameOverride: ""

agent:
  # -- The number of agent pods to run
  replicaCount: 1

  image:
    # -- Image repository to use for the agent
    repository: gcr.io/panope/agent
    # -- Image pull policy for the agent
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag:

  # -- If defined, uses a Secret to pull an image from a private Docker registry or repository.
  imagePullSecrets: []

  deployment:
    # -- Labels to add to the deployment of agent
    labels: {}
    # -- Annotations to add to the deployment of agent
    annotations: {}

  livenessProbe:
    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
    failureThreshold: 5
    httpGet:
      # -- Path to the health check endpoint
      path: /health
      # -- Port of health check endpoint
      port: 4444
      # -- Schema of request
      scheme: HTTP
    # -- Number of seconds after the container has started before [probe] is initiated
    initialDelaySeconds: 5
    # -- How often (in seconds) to perform the [probe]
    periodSeconds: 10
    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
    successThreshold: 1
    # -- Number of seconds after which the [probe] times out
    timeoutSeconds: 5

  readinessProbe:
    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
    failureThreshold: 3
    httpGet:
      # -- Path to the health check endpoint
      path: /health
      # -- Port of health check endpoint
      port: 4444
      # -- Schema of request
      scheme: HTTP
    # -- Number of seconds after the container has started before [probe] is initiated
    initialDelaySeconds: 5
    # -- How often (in seconds) to perform the [probe]
    periodSeconds: 10
    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
    successThreshold: 1
    # -- Number of seconds after which the [probe] times out
    timeoutSeconds: 5
  # -- Annotations for the agent pods
  podAnnotations: {}

  # -- Labels for the agent pods
  podLabels: {}

  # -- Security context for the agent pods
  podSecurityContext:
    {}
    # fsGroup: 2000

  # -- Security context for the agent containers
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # -- Priority class name for the agent pods
  priorityClassName: ""

  # -- Resources requests/limits for the agent containers
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Node labels for scheduling the agent pods
  nodeSelector: {}

  # -- Tolerations for scheduling the agent pods
  tolerations: []

  # -- Affinity for scheduling the agent pods
  affinity: {}

  secret:
    # -- Labels to add to the secret
    labels: {}
    # -- Annotations to add to the secret
    annotations: {}

    nats:
      # -- Configure the NATS credentials for agent to publish/subscribe to NATS server
      credentials:
      # credentials: |
      #   -----BEGIN NATS USER JWT-----
      #   ------END NATS USER JWT------

      #   ************************* IMPORTANT *************************
      #   NKEY Seed printed below can be used to sign and prove identity.
      #   NKEYs are sensitive and should be treated as secrets.

      #   -----BEGIN USER NKEY SEED-----
      #   ------END USER NKEY SEED------

      #   *************************************************************

    # -- If set to true the values are already base64 encoded when provided, otherwise the template performs the base64 encoding
    valuesAreBase64Encoded: false
    # -- JSON key file for a GCP service account to authenticate agent to GCP
    googleServiceAccountKeyfileJson:

  configMap:
    # -- Labels to add to the config map
    labels: {}
    # -- Annotations to add to the config map
    annotations: {}

    # -- Configure the NATS URI to connect NATS server, currently, the only supported URI schema is `wss`
    natsUri: "wss://nats.panope.net:443"

    # -- Configure NATS subject for agent to publish to NATS server
    agentSubject: ""

    # -- Configure NATS subject for agent to subscribe to NATS server
    controllerSubject: ""

    # -- Configure the health check port. if not set, default value is 4444
    healthCheckPort:

    # -- Configure the metrics port. if not set, default value is 2112
    metricsPort:

    # -- Configure the maximum number of nodes in the cluster as a percentage
    clusterNodeMaxSurge: "25%"

    # -- Configure the maximum number of nodes to be processed at the same time (cordoned or drained, etc.)
    maxProcessedNodeCount: "5"

    # -- Configure the timeout for rolling update of deployment. if not set, default value is 180
    rollingUpdateTimeoutSec:

    # -- configure the timeout for draining pods from node. if not set, default value is 180
    drainingTimeoutSec:

    # -- enable the failover feature
    failoverEnabled: "false"

  serviceAccount:
    # -- Service account name. if not set, panope.agent.fullname is used
    name: ""
    # -- Labels to add to the service account
    labels: {}
    # -- Annotations to add to the service account
    annotations: {}

  role:
    # -- Labels to add to the role
    labels: {}
    # -- Annotations to add to the role
    annotations: {}

  roleBinding:
    # -- Labels to add to the role binding
    labels: {}
    # -- Annotations to add to the role binding
    annotations: {}

  clusterRole:
    # -- Labels to add to the cluster role
    labels: {}
    # -- Annotations to add to the cluster role
    annotations: {}

  clusterRoleBinding:
    # -- Labels to add to the cluster role binding
    labels: {}
    # -- Annotations to add to the cluster role binding
    annotations: {}

  pdb:
    # -- Labels to add to the pdb
    labels: {}
    # -- Annotations to add to the pdb
    annotations: {}

    # -- Configure PodDisruptionBudget for the agent pods
    enabled: false
    # minAvailable: 1
    # maxUnavailable: 1

  serviceMonitor:
    # -- Labels to add to the service monitor
    labels: {}
    # -- Annotations to add to the service monitor
    annotations: {}
    # -- Configure the service monitor for Prometheus
    enabled: false

  service:
    # -- Labels to add to the service
    labels: {}
    # -- Annotations to add to the service
    annotations: {}

observer:
  image:
    # -- Image repository to use for the observer
    repository: gcr.io/panope/observer
    # -- Image pull policy for the observer
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion
    tag:

  # -- Annotations for the agent pods
  podAnnotations: {}

  # -- Labels for the observer pods
  podLabels: {}

  # -- Security context for the observer pods
  podSecurityContext: {}

  # -- If defined, uses a Secret to pull an image from a private Docker registry or repository
  imagePullSecrets: []

  # -- Affinity for scheduling the observer pods
  affinity:
    # -- Following affinity is required for the observer to work properly
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: cloud.google.com/gke-preemptible
            operator: Exists
        - matchExpressions:
          - key: cloud.google.com/gke-spot
            operator: Exists
        - matchExpressions:
          - key: panope.net/failover
            operator: Exists

  daemonset:
    # -- Labels to add to the deployment
    labels: {}
    # -- Annotations to add to the deployment
    annotations: {}

  secret:
    # -- Labels to add to the secret
    labels: {}
    # -- Annotations to add to the secret
    annotations: {}

    nats:
      # -- Configure the NATS credentials for the observer to publish/subscribe to NATS server
      credentials:
      # credentials: |
      #   -----BEGIN NATS USER JWT-----
      #   ------END NATS USER JWT------

      #   ************************* IMPORTANT *************************
      #   NKEY Seed printed below can be used to sign and prove identity.
      #   NKEYs are sensitive and should be treated as secrets.

      #   -----BEGIN USER NKEY SEED-----
      #   ------END USER NKEY SEED------

      #   *************************************************************


  configMap:
    # -- Labels to add to the config map
    labels: {}
    # -- Annotations to add to the config map
    annotations: {}

    # -- Configure NATS subject for the observer to publish to NATS server
    observerSubject: ""

    # -- Configure NATS subject for the observer to subscribe
    controllerSubject: ""

    # -- Configure NATS uri to connect to NATS server. currently, the only supported URI schema is `wss`
    natsUri: "wss://nats.panope.net:443"

    # -- Configure the health check port. if not set, default value is 4444
    healthCheckPort:

    # Configure the metrics port. if not set, default value is 2112
    metricsPort:

  livenessProbe:
    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
    failureThreshold: 5
    httpGet:
      # -- Path to the health check endpoint
      path: /health
      # -- Port of health check endpoint
      port: 4444
      # -- Schema of request
      scheme: HTTP
    # -- Number of seconds after the container has started before [probe] is initiated
    initialDelaySeconds: 5
    # -- How often (in seconds) to perform the [probe]
    periodSeconds: 10
    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
    successThreshold: 1
    # -- Number of seconds after which the [probe] times out
    timeoutSeconds: 5

  readinessProbe:
    # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
    failureThreshold: 3
    httpGet:
      # -- Path to the health check endpoint
      path: /health
      # -- Port of health check endpoint
      port: 4444
      # -- Schema of request
      scheme: HTTP
    # -- Number of seconds after the container has started before [probe] is initiated
    initialDelaySeconds: 5
    # -- How often (in seconds) to perform the [probe]
    periodSeconds: 10
    # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
    successThreshold: 1
    # -- Number of seconds after which the [probe] times out
    timeoutSeconds: 5

  serviceAccount:
    # -- Service account name. if not set, (panope.observer.fullname) is used
    name: ""
    # -- Labels to add to the service account
    labels: {}
    # -- Annotations to add to the service account
    annotations: {}

  clusterRole:
    # -- Labels to add to the cluster role
    labels: {}
    # -- Annotations to add to the cluster role
    annotations: {}

  clusterRoleBinding:
    # -- Labels to add to the cluster role binding
    labels: {}
    # -- Annotations to add to the cluster role binding
    annotations: {}

  # -- Priority class name for the observer pods
  priorityClassName: ""

  # -- Resources requests/limits for the observer containers
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Tolerations for scheduling the observer pods
  tolerations: []

  serviceMonitor:
    # -- Labels to add to the service monitor
    labels: {}
    # -- Annotations to add to the service monitor
    annotations: {}
    # -- Configure the service monitor for Prometheus
    enabled: false

  service:
    # -- Labels to add to the service
    labels: {}
    # -- Annotations to add to the service
    annotations: {}
